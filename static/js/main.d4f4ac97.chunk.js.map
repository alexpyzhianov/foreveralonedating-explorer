{"version":3,"sources":["Tooltip.module.css","StoryLine.module.css","shape.ts","Tooltip.tsx","StoryLine.tsx","App.tsx","serviceWorker.js","index.tsx","App.module.css"],"names":["module","exports","metaRegex","blackList","filterGood","post","includes","url","fromGender","toGender","age","serverPostToClient","titleInt","parseInt","h","exec","createdUtc","Date","t","undefined","score","s","u","toLowerCase","title","comments","c","Tooltip","top","left","className","styles","tooltip","style","role","aria-label","href","target","rel","Storyline","React","memo","posts","containerRef","useRef","containerSize","useComponentSize","useState","setTooltip","daysMap","group","p","startOfDay","valueOf","days","Array","from","sort","a","commentsExtent","extent","scoreExtent","dayScale","scaleTime","domain","length","range","verticalScale","scaleLinear","height","sizeScale","storyline","ref","map","date","key","toString","year","format","day","filter","gender","postCn","selected","tabIndex","fontSize","onFocus","updateMilestones","fileNames","fill","_","i","App","buffer","setBuffer","setPosts","useEffect","fileName","pop","axios","get","then","result","newPosts","data","shift","appContainer","loading","heart","info","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4f4ac97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"Tooltip_tooltip__2efxb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"storyline\":\"StoryLine_storyline__3sU0T\",\"post\":\"StoryLine_post__yr64I\",\"selected\":\"StoryLine_selected__dFYa5\",\"day\":\"StoryLine_day__3RzGy\",\"date\":\"StoryLine_date__3ZwDY\",\"year\":\"StoryLine_year__1d-fD\"};","export interface ServerPost {\n    c: number // comments\n    t: number // time\n    s: number // score\n    h: string // title\n    u: string // url\n}\n\nexport type Gender = \"m\" | \"f\" | \"r\"\n\nexport interface Post {\n    createdUtc: Date\n    score: number\n    url: string\n    age?: number\n    fromGender?: Gender\n    toGender?: Gender\n    title: string\n    comments: number\n}\n\nconst metaRegex = /\\[([m,f])4([m,f])]/gim\n\nconst blackList = [\n    \"https://www.reddit.com/r/GBr4r/comments/bavsby/18_m4f_watchet_just_a_guy_looking_for_a_girl/\",\n]\n\nexport function filterGood(post: Post) {\n    return (\n        !blackList.includes(post.url) &&\n        post.fromGender &&\n        post.toGender &&\n        post.age\n    )\n}\n\nexport function serverPostToClient(post: ServerPost): Post {\n    const titleInt = parseInt(post.h, 10)\n    const [, fromGender, toGender] = metaRegex.exec(post.h) || [\n        null,\n        null,\n        null,\n    ]\n\n    return {\n        createdUtc: new Date(post.t * 1000),\n        age: titleInt >= 14 && titleInt < 150 ? titleInt : undefined,\n        score: post.s,\n        url: post.u,\n        fromGender: fromGender\n            ? (fromGender.toLowerCase() as Gender)\n            : undefined,\n        toGender: toGender ? (toGender.toLowerCase() as Gender) : undefined,\n        title: post.h,\n        comments: post.c,\n    }\n}\n","import React from \"react\"\nimport styles from \"./Tooltip.module.css\"\n\nexport interface TooltipProps {\n    top: number\n    left: number\n    title: string\n    score: number\n    comments: number\n    url: string\n}\n\nexport const Tooltip: React.FC<TooltipProps> = ({\n    top,\n    left,\n    title,\n    score,\n    comments,\n    url,\n}) => {\n    return (\n        <div className={styles.tooltip} style={{ top, left }}>\n            <h4>{title}</h4>\n            <p>\n                <span role=\"img\" aria-label=\"post score\">\n                    ‚¨ÜÔ∏è\n                </span>{\" \"}\n                {score}\n            </p>\n            <p>\n                <span role=\"img\" aria-label=\"comments\">\n                    üí¨Ô∏è\n                </span>{\" \"}\n                {comments}\n            </p>\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                Open the post\n            </a>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { group, extent } from \"d3-array\"\nimport startOfDay from \"date-fns/startOfDay\"\nimport format from \"date-fns/format\"\nimport { Post, Gender } from \"./shape\"\nimport { scaleLinear, scaleTime } from \"d3-scale\"\nimport useComponentSize from \"@rehooks/component-size\"\nimport styles from \"./StoryLine.module.css\"\nimport { Tooltip } from \"./Tooltip\"\n\nexport interface StorylineProps {\n    posts: Post[]\n}\n\nfunction getEmoji(age: number, gender: Gender) {\n    if (age < 20 && gender === \"m\") {\n        return \"üë¶\"\n    } else if (age < 20 && gender === \"f\") {\n        return \"üëß\"\n    } else if (age < 40 && gender === \"m\") {\n        return \"üë®\"\n    } else if (age < 40 && gender === \"f\") {\n        return \"üë©\"\n    } else if (age < 60 && gender === \"m\") {\n        return \"üë®‚Äçü¶≥\"\n    } else if (age < 60 && gender === \"f\") {\n        return \"üë©‚Äçü¶≥\"\n    } else if (gender === \"f\") {\n        return \"üëµ\"\n    } else if (gender === \"m\") {\n        return \"üë¥\"\n    } else {\n        return \"üëΩ\"\n    }\n}\n\nexport const Storyline: React.FC<StorylineProps> = React.memo(({ posts }) => {\n    const containerRef = React.useRef<HTMLDivElement>(null)\n    const containerSize = useComponentSize(containerRef)\n    const [tooltip, setTooltip] = React.useState<Post | null>(null)\n    const daysMap = group(posts, p => startOfDay(p.createdUtc).valueOf())\n    const days = Array.from(daysMap).sort(([a], [b]) => b - a)\n\n    const commentsExtent = extent(posts, p => p.comments) as [number, number]\n    const scoreExtent = extent(posts, p => p.score) as [number, number]\n\n    const dayScale = scaleTime()\n        .domain([days[0][0], days[days.length - 1][0]])\n        .range([16, days.length * 40])\n\n    const verticalScale = scaleLinear()\n        .domain(scoreExtent)\n        .range([60, containerSize ? containerSize.height - 60 : 600])\n\n    const sizeScale = scaleLinear()\n        .domain(commentsExtent)\n        .range([18, 60])\n\n    return (\n        <div className={styles.storyline} ref={containerRef}>\n            {days.map(([date]) => {\n                return (\n                    <div\n                        className={styles.date}\n                        style={{ left: dayScale(date) }}\n                        key={date.toString()}\n                    >\n                        <div className={styles.year}>{format(date, \"y\")}</div>\n                        <div>{format(date, \"MMM\")}</div>\n                        <div>{format(date, \"dd\")}</div>\n                    </div>\n                )\n            })}\n\n            {days.map(([date, posts]) => {\n                return (\n                    <div\n                        key={date.toString()}\n                        className={styles.day}\n                        style={{ left: dayScale(date) }}\n                    >\n                        {posts\n                            .filter(p => p.age && p.fromGender)\n                            .map(p => {\n                                const postCn =\n                                    tooltip && p.url === tooltip.url\n                                        ? \" \" + styles.selected\n                                        : \"\"\n                                return (\n                                    <div\n                                        key={p.url}\n                                        tabIndex={0}\n                                        className={styles.post + postCn}\n                                        style={{\n                                            top: verticalScale(p.score),\n                                            fontSize: sizeScale(p.comments),\n                                        }}\n                                        onFocus={() => setTooltip(p)}\n                                    >\n                                        {getEmoji(\n                                            p.age as number, // handled by filter\n                                            p.fromGender as Gender,\n                                        )}\n                                    </div>\n                                )\n                            })}\n                    </div>\n                )\n            })}\n\n            {tooltip && (\n                <Tooltip\n                    top={\n                        verticalScale(tooltip.score) +\n                        24 +\n                        sizeScale(tooltip.comments)\n                    }\n                    left={\n                        dayScale(tooltip.createdUtc) +\n                        24 +\n                        sizeScale(tooltip.comments)\n                    }\n                    comments={tooltip.comments}\n                    score={tooltip.score}\n                    title={tooltip.title}\n                    url={tooltip.url}\n                />\n            )}\n        </div>\n    )\n})\n","import React from \"react\"\nimport axios from \"axios\"\nimport { Post, ServerPost, serverPostToClient, filterGood } from \"./shape\"\nimport { Storyline } from \"./StoryLine\"\nimport styles from \"./App.module.css\"\n\nconst updateMilestones = [1000, 5000, 10000, 25742]\n\nconst fileNames = Array(64)\n    .fill(0)\n    .map((_, i) => `./data/out${i}.json`)\n\nfunction App() {\n    const [buffer, setBuffer] = React.useState<Post[]>([])\n    const [posts, setPosts] = React.useState<Post[]>([])\n\n    React.useEffect(() => {\n        if (!fileNames.length) return\n        const fileName = fileNames.pop() as string\n        axios.get<any, { data: ServerPost[] }>(fileName).then(result => {\n            const newPosts = result.data\n                .map(serverPostToClient)\n                .filter(filterGood)\n\n            setBuffer([...buffer, ...newPosts])\n        })\n    }, [buffer])\n\n    React.useEffect(() => {\n        if (!updateMilestones.length || updateMilestones[0] <= buffer.length) {\n            setPosts(buffer)\n            updateMilestones.shift()\n        }\n    }, [buffer])\n\n    return (\n        <main className={styles.appContainer}>\n            {posts.length > 0 && <Storyline posts={posts} />}\n\n            {updateMilestones.length > 0 ? (\n                <>\n                    <div className={styles.loading}>\n                        {\" \"}\n                        Loading... ({updateMilestones.length} left){\" \"}\n                    </div>\n                    <div className={styles.heart}>\n                        <div></div>\n                    </div>\n                </>\n            ) : (\n                <p className={styles.info}>\n                    Get the full{\" \"}\n                    <a\n                        href=\"https://drive.google.com/open?id=1kLG9ls3zHLFy4HSKRlNdw23r-KJTiA-1\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        dataset\n                    </a>\n                </p>\n            )}\n        </main>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"App_appContainer__3jRx1\",\"info\":\"App_info__3tKmE\",\"loading\":\"App_loading__wCN4P\",\"heart\":\"App_heart__2yfYB\"};"],"sourceRoot":""}