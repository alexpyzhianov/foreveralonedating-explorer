{"version":3,"sources":["App.module.css","Tooltip.module.css","StoryLine.module.css","Tooltip.tsx","Face.tsx","shape.ts","StoryLine.tsx","App.tsx","serviceWorker.js","index.tsx","Face.module.css"],"names":["module","exports","Tooltip","top","left","title","score","comments","url","className","styles","tooltip","style","role","aria-label","href","target","rel","Face","age","gender","isSelected","fontSize","post","onFocus","tabIndex","selected","fromGender","ageRegex","metaRegex","filterGood","toGender","serverPostToClient","exec","h","titleInt","createdUtc","Date","t","parseInt","undefined","s","u","toLowerCase","c","scoreExtent","sizeScale","scaleLinear","domain","range","fileList","Array","fill","map","_","i","postsCache","Row","React","memo","date","posts","setTooltip","verticalScale","console","log","column","tick","year","format","p","key","Boolean","e","r","getBoundingClientRect","width","areEqual","Storyline","containerRef","useRef","containerSize","useComponentSize","useState","days","setDays","loadMoreItems","useCallback","nextFile","shift","axios","get","then","result","prototype","push","apply","data","filter","from","group","startOfDay","valueOf","Promise","resolve","scalePow","exponent","height","isItemLoaded","index","length","itemCount","storyline","ref","onItemsRendered","itemData","itemSize","layout","App","app","info","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ff7bee0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"info\":\"App_info__3tKmE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"Tooltip_tooltip__2efxb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"storyline\":\"StoryLine_storyline__3sU0T\",\"column\":\"StoryLine_column__38MPb\",\"tick\":\"StoryLine_tick__2rO5J\",\"year\":\"StoryLine_year__1d-fD\"};","import React from \"react\"\nimport styles from \"./Tooltip.module.css\"\n\nexport interface TooltipProps {\n    top: number\n    left: number\n    title: string\n    score: number\n    comments: number\n    url: string\n}\n\nexport const Tooltip: React.FC<TooltipProps> = ({\n    top,\n    left,\n    title,\n    score,\n    comments,\n    url,\n}) => {\n    return (\n        <div className={styles.tooltip} style={{ top, left }}>\n            <h4>{title}</h4>\n            <p>\n                <span role=\"img\" aria-label=\"post score\">\n                    ‚¨ÜÔ∏è\n                </span>{\" \"}\n                {score}\n            </p>\n            <p>\n                <span role=\"img\" aria-label=\"comments\">\n                    üí¨Ô∏è\n                </span>{\" \"}\n                {comments}\n            </p>\n            <a\n                href={\n                    \"https://www.reddit.com/r/ForeverAloneDating/comments/\" +\n                    url\n                }\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                Open the post\n            </a>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { Post, Gender } from \"./shape\"\nimport styles from \"./Face.module.css\"\n\nfunction getEmoji(age: number, gender: Gender) {\n    if (age < 20 && gender === \"m\") {\n        return \"üë¶\"\n    } else if (age < 20 && gender === \"f\") {\n        return \"üëß\"\n    } else if (age < 40 && gender === \"m\") {\n        return \"üë®\"\n    } else if (age < 40 && gender === \"f\") {\n        return \"üë©\"\n    } else if (age < 60 && gender === \"m\") {\n        return \"üë®‚Äçü¶≥\"\n    } else if (age < 60 && gender === \"f\") {\n        return \"üë©‚Äçü¶≥\"\n    } else if (gender === \"f\") {\n        return \"üëµ\"\n    } else if (gender === \"m\") {\n        return \"üë¥\"\n    } else {\n        return \"üëΩ\"\n    }\n}\n\nexport interface FaceProps {\n    isSelected: boolean\n    top: number\n    fontSize: number\n    post: Post\n    onFocus(e: React.FocusEvent<HTMLDivElement>): void\n}\n\nexport const Face: React.FC<FaceProps> = ({\n    isSelected,\n    top,\n    fontSize,\n    post,\n    onFocus,\n}) => (\n    <div\n        tabIndex={0}\n        className={`${styles.post} ${isSelected ? styles.selected : \"\"}`}\n        style={{ top, fontSize }}\n        onFocus={onFocus}\n    >\n        {getEmoji(\n            post.age as number, // handled by filter\n            post.fromGender as Gender,\n        )}\n    </div>\n)\n","export interface ServerPost {\n    c: number // comments\n    t: number // time\n    s: number // score\n    h: string // title\n    u: string // url\n}\n\nexport type Gender = \"m\" | \"f\" | \"r\"\n\nexport interface Post {\n    createdUtc: Date\n    score: number\n    url: string\n    age?: number\n    fromGender?: Gender\n    toGender?: Gender\n    title: string\n    comments: number\n}\n\nexport interface TooltipState extends Post {\n    top: number\n    left: number\n}\n\nconst ageRegex = /\\d\\d/\nconst metaRegex = /([M,F,f,m])4([M,F,f,m])/\n\nexport function filterGood(post: Post) {\n    return post.fromGender && post.toGender && post.age\n}\n\nexport function serverPostToClient(post: ServerPost): Post {\n    const [titleInt] = ageRegex.exec(post.h) || [null]\n    const [, fromGender, toGender] = metaRegex.exec(post.h) || [\n        null,\n        null,\n        null,\n    ]\n\n    return {\n        createdUtc: new Date(post.t * 1000),\n        age:\n            titleInt && parseInt(titleInt) >= 14 && parseInt(titleInt) < 150\n                ? parseInt(titleInt)\n                : undefined,\n        score: post.s,\n        url: post.u,\n        fromGender: fromGender\n            ? (fromGender.toLowerCase() as Gender)\n            : undefined,\n        toGender: toGender ? (toGender.toLowerCase() as Gender) : undefined,\n        title: post.h,\n        comments: post.c,\n    }\n}\n","import React from \"react\"\nimport axios from \"axios\"\nimport { FixedSizeList as List, areEqual } from \"react-window\"\nimport InfiniteLoader from \"react-window-infinite-loader\"\nimport useComponentSize from \"@rehooks/component-size\"\nimport startOfDay from \"date-fns/startOfDay\"\nimport format from \"date-fns/format\"\nimport { scaleLinear, scalePow } from \"d3-scale\"\nimport { group } from \"d3-array\"\nimport { Tooltip } from \"./Tooltip\"\nimport { Face } from \"./Face\"\nimport {\n    Post,\n    ServerPost,\n    serverPostToClient,\n    filterGood,\n    TooltipState,\n} from \"./shape\"\nimport styles from \"./StoryLine.module.css\"\n\nconst commentsExtent = [0, 100]\nconst scoreExtent = [0, 500]\n\nconst sizeScale = scaleLinear()\n    .domain(commentsExtent)\n    .range([18, 60])\n\nconst fileList = Array(55)\n    .fill(0)\n    .map((_, i) => `./data/data${i}.json`)\n\ntype Day = [number, Post[]]\n\nconst postsCache: Post[] = []\n\ninterface RowProps {\n    style: any\n    date: number\n    posts: Post[]\n    tooltip: TooltipState | null\n    setTooltip(t: TooltipState): void\n    verticalScale(v: number): number\n}\n\nconst Row: React.FC<RowProps> = React.memo(\n    ({ style, date, posts, setTooltip, verticalScale, tooltip }) => (\n        <>\n            {console.log(style)}\n            <div className={styles.column} style={style}>\n                <div className={styles.tick}>\n                    <div className={styles.year}>{format(date, \"y\")}</div>\n                    <div>{format(date, \"MMM\")}</div>\n                    <div>{format(date, \"dd\")}</div>\n                </div>\n                {posts.map(p => (\n                    <Face\n                        key={p.url}\n                        isSelected={Boolean(tooltip && p.url === tooltip.url)}\n                        top={verticalScale(p.score)}\n                        fontSize={sizeScale(p.comments)}\n                        post={p}\n                        onFocus={(e: React.FocusEvent<HTMLDivElement>) => {\n                            const r = e.target.getBoundingClientRect()\n                            setTooltip({\n                                top: r.top - 40,\n                                left: r.left + r.width / 2,\n                                ...p,\n                            })\n                        }}\n                    />\n                ))}\n            </div>\n        </>\n    ),\n    areEqual,\n)\n\nexport const Storyline: React.FC = () => {\n    const containerRef = React.useRef<HTMLDivElement>(null)\n    const containerSize = useComponentSize(containerRef)\n\n    const [tooltip, setTooltip] = React.useState<TooltipState | null>(null)\n    const [days, setDays] = React.useState<Day[]>([])\n\n    const loadMoreItems = React.useCallback(() => {\n        const nextFile = fileList.shift()\n        if (!nextFile) {\n            return Promise.resolve()\n        }\n\n        return axios.get<any, { data: ServerPost[] }>(nextFile).then(result => {\n            Array.prototype.push.apply(\n                postsCache,\n                result.data.map(serverPostToClient).filter(filterGood),\n            )\n            const days = Array.from(\n                group(postsCache, p => startOfDay(p.createdUtc).valueOf()),\n            )\n            setDays(days)\n        })\n    }, [])\n\n    const verticalScale = scalePow()\n        .exponent(0.7)\n        .domain(scoreExtent)\n        .range([54, containerSize ? containerSize.height : 600])\n\n    console.log(verticalScale(400))\n\n    const isItemLoaded = (index: number) =>\n        fileList.length === 0 || index < days.length\n    const itemCount = fileList.length > 0 ? days.length + 1 : days.length\n\n    return (\n        <div className={styles.storyline} ref={containerRef}>\n            {containerSize.height && (\n                <InfiniteLoader\n                    isItemLoaded={isItemLoaded}\n                    itemCount={itemCount}\n                    loadMoreItems={loadMoreItems}\n                >\n                    {({ onItemsRendered, ref }) => (\n                        <List\n                            height={containerSize.height}\n                            width={containerSize.width}\n                            itemCount={itemCount}\n                            itemData={days}\n                            itemSize={40}\n                            layout=\"horizontal\"\n                            onItemsRendered={onItemsRendered}\n                            ref={ref}\n                        >\n                            {({ index, style, data }) => {\n                                const [date, posts] = (data[index] || []) as Day\n                                return isItemLoaded(index) ? (\n                                    <Row\n                                        style={style}\n                                        date={date}\n                                        posts={posts}\n                                        tooltip={tooltip}\n                                        setTooltip={setTooltip}\n                                        verticalScale={verticalScale}\n                                    />\n                                ) : (\n                                    <div\n                                        className={styles.column}\n                                        style={style}\n                                    >\n                                        \"Loading...\"\n                                    </div>\n                                )\n                            }}\n                        </List>\n                    )}\n                </InfiniteLoader>\n            )}\n\n            {tooltip && <Tooltip {...tooltip} />}\n        </div>\n    )\n}\n","import React from \"react\"\nimport { Storyline } from \"./StoryLine\"\nimport styles from \"./App.module.css\"\n\nfunction App() {\n    return (\n        <main className={styles.app}>\n            <Storyline />\n\n            <p className={styles.info}>\n                Get the full{\" \"}\n                <a\n                    href=\"https://drive.google.com/open?id=1kLG9ls3zHLFy4HSKRlNdw23r-KJTiA-1\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    dataset\n                </a>\n            </p>\n        </main>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Face_post__28TVh\",\"selected\":\"Face_selected__3RvCB\"};"],"sourceRoot":""}